.\" Process this file with
.\" groff -man -Tascii foo.1
.\"
.TH SIGDUP 1 "NOVEMBER 2021"
.SH NAME
sigdup \- selectively convert logical signals present in a sigrok/pulseview .sr capture file into a highly-optimized stream of signal transitions and timing information needed to replay the signal on a MSP430FR5994 microcontroller.
.SH SYNOPSIS
.B sigdup [-hv] [-i
.I input-file
.B ] [-o
.I output-file
.B ] [-a
.I replay-file
.B ] [-k
.I NAME
.B ] [-m
.I HEX
.B ] [-l
.I DEC
.B ] [-r
.I DEC
.B ] [-d
.I DEC
.B ]
.SH DESCRIPTION
.B sigdup
reads logical signals from .sr files generated by sigrok/pulseview (the portable, cross-platform, Open-Source signal analysis software suite) and outputs a replay file understood by sigdup-firmware that is present on an MSP-EXP430FR5994 development board. the original signals are replayed by the microcontroller using the best clock divider for that particular signal. the replay output can contain up to 8 channels (8 separate signals) that will all be replayed as close as possible to how they were captured in the first place.

sigdup runs simulations of replay signals with all 20 possible clock dividers that can be set up as input clock for a dedicated timer present on the uC. this timer controls the signal generation.

for each clock divider time interval errors are calculated and the replay with the least amount of deterministic jitter and least amount of resulting data packets is selected. the user is able to overwrite the scoring algorythm with the 
.BR -d [DEC]
option and select a given divider if no blackout errors are found for it.

if the signal contains consecutive transitions shorter then 12us, replay generation is not possible. see 
.B LIMITATIONS 
below.

.SH OPTIONS
.IP -h
Display short help message and exit
.IP -v
Display application version
.IP "-i input-file"
pulseview .sr logic capture file used as input signal. these can contain 1byte per sample (as generated by Saleae 8 channel analyzer) or 2bytes per sample (as generated by the 16 channel DreamSourceLab DSLogicPlus). very big captures are supported - sometimes a 1GB capture can be made small enough to fit the microcontroller's FRAM if there are less then 2^16 transitions.
.IP "-o output-file"
binary optimized output file that contains a 11byte header followed by 3byte packets containing the replay stream.

.EX
header structure:
|  0  |  1  |  2  |  3  |  4  |  5  |  6  |  7  |
| ver | len | pkt count | bpp | bs  | div | chk1
      | chk2      |
.EE

.TS
l c l
l c l.
header	size	explanation
component
_
\fBver\fP	1b	header version
\fBlen\fP	1b	header length in bytes
\fBpkt count\fP	2b	replay packet count
\fBbpp\fP	1b	bytes per packet - currently 3, see table below
\fBbs\fP	1b	block size - unused
\fBdiv\fP	1b	clock divider 
\fBchk1\fP	2b	crc16 of the data stream
\fBchk2\fP	2b	crc16 of this header
.TE

.EX
packet structure:
|  0  |  1  |  2  |
| sig |    ccr    |
.EE

.TS
l c l
l c l.
replay	size	explanation
packet
component
_
\fBsig\fP	1b	P3OUT output register value
\fBccr\fP	2b	capture/compare register
.TE

.IP "-a replay-file"
analyze a previously-generated replay file
.IP "-k NAME"
pulseview metadata label used by sigrok inside the capture file for the current device, default: 
.I "device 1".
.IP "-m HEX"
hex representation (without the 
.I 0x 
prefix or 
.I h 
suffix) of a bitmask applied to the input signal in order to only convert given channels.
for instance if only channel 6 is needed from the capture, calculate hex(1 << 6) and provide 
.I "-m 0040"

default value is 
.B ffff
(all channels are processed)

.IP "-r DEC"
right shift the channels from the input capture by
.B DEC
positions. used to move the channels of interest to given pins on P3OUT. especially useful to reach channels 8-15 from a 16 channel capture.
for instance in order to shift channels 8 and 9 to P3.0, P3.1 one needs to provide "-m 0300 -r 8" as options. be advised that the mask is applied first and then the shift operation.

default value is 
.B 0

.IP "-l DEC"
left shift the channels from the input capture by
.B DEC
positions. see option 
.I -r
above

default value is 
.B 0

.IP "-d DEC"
force the use of a given timer clock divider. run -h to get the list of valid dividers. this information will the used by the microcontroller during the timer initialization by setting the TAxCTL.ID and TAxEX0.TAIDEX registers and will divide the 16MHz master clock.

See
.BR sigdup-firmware (1)
for further details.
.SH LIMITATIONS
a replay signal can not be generated in the following corner cases:

.IP "\(bu" 4
two consecutive packets need to be closer than 12us.
while packets are only generated for signal transitions and just before a counter overflow, it takes about 
.B BLACKOUT_INT
seconds for the microcontroller to wake up for the timer interrupt, set P3OUT, read the next timer CCR register from FRAM, set the timer and return from interrupt. currently this means it cannot replay a faster then 35kHz clock, an uart over 57600bauds or sub 12us spikes between channels.
.IP "\(bu" 4
high FRAM storage is about 212 kbytes, which imposes a length restriction to zmodem uploads.
.IP "\(bu" 4
the file header provides 16bits for the number of total packets. so no more than 2^16-1 packets worth of transitions and counter overflows.

.SH DIAGNOSTICS
errors are generated on stderr if any of the system calls returns a failure.
 
.SH BUGS
please report any bugs via the github tracker located at <https://github.com/rodan/sigdup/issues>
.SH "LICENSE"
.B sigdup
is covered by the GNU General Public License (GPLv3 or later).
.SH AUTHOR
Petre Rodan <2b4eda@subdimension.ro>
.SH "SEE ALSO"
.BR sigdup-firmware (1)

